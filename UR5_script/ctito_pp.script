def ctito_pp():
  set_gravity([0.0, 0.0, 9.82])
  set_safety_mode_transition_hardness(0)
  set_tcp(p[0.0,0.0,0.174,0.0,0.0,0.0])
  set_payload(0.93,[0.0,0.0,0.058])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  step_count_a4f56f84_0fe6_4ab2_a0ea_f0abf8e2d42d = 0
  thread Step_Counter_Thread_44e163ca_fe68_4e2a_a842_3ce2bb446918():
    while (True):
      step_count_a4f56f84_0fe6_4ab2_a0ea_f0abf8e2d42d = step_count_a4f56f84_0fe6_4ab2_a0ea_f0abf8e2d42d + 1
      sync()
    end
  end
  run Step_Counter_Thread_44e163ca_fe68_4e2a_a842_3ce2bb446918()
  set_tool_voltage(24)
  global cont_process=0
  def Go_to_sf():
    $ 29 "Go_to_sf" "noBreak"
    $ 30 "MoveJ"
    $ 31 "Punto_de_paso_4" "breakAfter"
    movej(get_inverse_kin(p[-.002786339398, -.338929414105, .058485166709, .077690381318, -2.449751203822, -1.935910416124], qnear=[1.3991020917892456, -0.974954907094137, 1.6051263809204102, -0.8692577520953577, -1.7829445044146937, -0.06829291978944951]), a=1.3962634015954636, v=1.0471975511965976)
    $ 32 "Punto_de_paso_3" "breakAfter"
    movej(get_inverse_kin(p[-.208205628689, -.273817015005, .188244046813, 1.069146125059, 1.989311546066, 1.171043310675], qnear=[0.5521091222763062, -1.2558124701129358, 1.5330371856689453, -0.7332165876971644, -1.5131285826312464, -0.06830484071840459]), a=1.3962634015954636, v=1.0471975511965976)
    $ 33 "Punto_de_paso_5" "breakAfter"
    movej(get_inverse_kin(p[-.567711484702, -.216824049615, .241713224463, 1.594364189322, -.157653899476, .072396681453], qnear=[-0.26788264909853154, -1.1740801970111292, 1.5332527160644531, -0.5021722952472132, -0.2181161085711878, 0.2848921555423738]), a=1.3962634015954636, v=1.0471975511965976)
  end
  def Drop_on_1():
    $ 34 "Drop_on_1" "noBreak"
    $ 35 "MoveJ"
    $ 36 "Punto_de_paso_6" "breakAfter"
    movej(get_inverse_kin(p[-.611434973037, -.280889200936, .261640747011, 1.553951937505, -.244568889400, .230349102788], qnear=[-0.13967830339540654, -1.023541275654928, 1.2719264030456543, -0.2303240934955042, -0.1302579084979456, 0.2849193513393402]), a=1.3962634015954636, v=1.0471975511965976)
    $ 37 "Punto_de_paso_7" "breakAfter"
    movej(get_inverse_kin(p[-.650229568245, -.317538852694, .237271572208, .914455401300, -1.522170279982, 1.439150428848], qnear=[-0.07507163683046514, -0.9753626028644007, 1.2585349082946777, -0.3549874464618128, 0.01084834523499012, 2.045606851577759]), a=1.3962634015954636, v=1.0471975511965976)
  end
  def Drop_on_2():
    $ 38 "Drop_on_2" "noBreak"
    $ 39 "MoveJ"
    $ 40 "Punto_de_paso_8" "breakAfter"
    movej(get_inverse_kin(p[-.585345429826, -.121080620060, .262635489643, 1.555793217026, -.206738395611, .265099727989], qnear=[-0.4032805601703089, -1.0227387587176722, 1.2714948654174805, -0.23123532930483037, -0.43966418901552373, 0.28478750586509705]), a=1.3962634015954636, v=1.0471975511965976)
    $ 41 "Punto_de_paso_9" "breakAfter"
    movej(get_inverse_kin(p[-.635381828867, -.148532873964, .233099197712, .957891398421, -1.540711095073, 1.494429126306], qnear=[-0.3414390722857874, -0.9530347029315394, 1.2220072746276855, -0.3158205191241663, -0.3168090025531214, 2.048814058303833]), a=1.3962634015954636, v=1.0471975511965976)
  end
  def Save_on_1():
    $ 42 "Save_on_1" "noBreak"
    $ 43 "MoveJ"
    $ 44 "Punto_de_pas_11" "breakAfter"
    movej(get_inverse_kin(p[-.457215417279, -.404962679796, .083699629021, 1.697173061076, .149312789125, .024613370695], qnear=[0.0880758166190282, -0.7565784396319879, 1.5320128506890398, 0.915575642991298, 0.13392671942858403, -1.7633197944230519]), a=1.3962634015954636, v=1.0471975511965976)
    $ 45 "Punto_de_pas_10" "breakAfter"
    movej(get_inverse_kin(p[-.457269336550, -.404933002053, .055132905958, 1.697147739453, .149352068042, .024430333029], qnear=[0.08807581663087385, -0.7082775185777006, 1.5325024731669004, 0.8667850993718655, 0.13392671942716028, -1.7633197943349703]), a=1.3962634015954636, v=1.0471975511965976)
    $ 46 "Punto_de_pas_12" "breakAfter"
    movej(get_inverse_kin(p[-.457266651157, -.404928250069, .145856220477, 1.697289204554, .149196255007, .024653041425], qnear=[0.08807581659326935, -0.8530228918785792, 1.5139916224562597, 1.0300413236604717, 0.13392671943167014, -1.76331979461456]), a=1.3962634015954636, v=1.0471975511965976)
  end
  def Save_on_2():
    $ 47 "Save_on_2" "noBreak"
    $ 48 "MoveJ"
    $ 49 "Punto_de_pas_11" "breakAfter"
    movej(get_inverse_kin(p[-.457215417279, -.404962679796, .083699629021, 1.697173061076, .149312789125, .024613370695], qnear=[0.0880758166190282, -0.7565784396319879, 1.5320128506890398, 0.915575642991298, 0.13392671942858403, -1.7633197944230519]), a=1.3962634015954636, v=1.0471975511965976)
    $ 50 "Punto_de_pas_10" "breakAfter"
    movej(get_inverse_kin(p[-.457269336550, -.404933002053, .055132905958, 1.697147739453, .149352068042, .024430333029], qnear=[0.08807581663087385, -0.7082775185777006, 1.5325024731669004, 0.8667850993718655, 0.13392671942716028, -1.7633197943349703]), a=1.3962634015954636, v=1.0471975511965976)
    $ 51 "Punto_de_pas_12" "breakAfter"
    movej(get_inverse_kin(p[-.457266651157, -.404928250069, .145856220477, 1.697289204554, .149196255007, .024653041425], qnear=[0.08807581659326935, -0.8530228918785792, 1.5139916224562597, 1.0300413236604717, 0.13392671943167014, -1.76331979461456]), a=1.3962634015954636, v=1.0471975511965976)
  end
  def Save_on_3():
    $ 52 "Save_on_3" "noBreak"
    $ 53 "MoveJ"
    $ 54 "Punto_de_pas_11" "breakAfter"
    movej(get_inverse_kin(p[-.457215417279, -.404962679796, .083699629021, 1.697173061076, .149312789125, .024613370695], qnear=[0.0880758166190282, -0.7565784396319879, 1.5320128506890398, 0.915575642991298, 0.13392671942858403, -1.7633197944230519]), a=1.3962634015954636, v=1.0471975511965976)
    $ 55 "Punto_de_pas_10" "breakAfter"
    movej(get_inverse_kin(p[-.457269336550, -.404933002053, .055132905958, 1.697147739453, .149352068042, .024430333029], qnear=[0.08807581663087385, -0.7082775185777006, 1.5325024731669004, 0.8667850993718655, 0.13392671942716028, -1.7633197943349703]), a=1.3962634015954636, v=1.0471975511965976)
    $ 56 "Punto_de_pas_12" "breakAfter"
    movej(get_inverse_kin(p[-.457266651157, -.404928250069, .145856220477, 1.697289204554, .149196255007, .024653041425], qnear=[0.08807581659326935, -0.8530228918785792, 1.5139916224562597, 1.0300413236604717, 0.13392671943167014, -1.76331979461456]), a=1.3962634015954636, v=1.0471975511965976)
  end
  while (True):
    $ 1 "Robot Program"
    $ 2 "MoveJ"
    $ 3 "Punto_de_paso_1" "breakAfter"
    movej([1.5589702129364014, -1.8352816740619105, 1.8292675018310547, -3.104090992604391, -1.4444482962237757, 0.07946702092885971], a=1.3962634015954636, v=1.0471975511965976)
    $ 5 "If cont_process≟3"
    if (cont_process == 3):
      $ 6 "Popup: The output cups is over."
      popup("The output cups is over.", "Warning", True, False, blocking=True)
      $ 7 "cont_process≔0"
      global cont_process=0
    end
    $ 8 "If digital_in[0]"
    if (get_standard_digital_in(0)):
      $ 9 "Popup: Has been detected a cup"
      popup("Has been detected a cup", "Message", False, False, blocking=True)
      $ 10 "Punto_de_paso_2" "breakAfter"
      movej([1.3925044536590576, -0.9126175085650843, 1.564572811126709, -0.8086360136615198, -1.7814224402057093, -0.06832915941347295], a=1.3962634015954636, v=1.0471975511965976)
      $ 12 "Call Go_to_sf"
      Go_to_sf()
      $ 13 "If (digital_in[1] and digital_in[2]) or ( not digital_in[1] and digital_in[3])"
      if ((get_standard_digital_in(1)  and  get_standard_digital_in(2))  or  (  not  get_standard_digital_in(1)  and  get_standard_digital_in(3))):
        $ 14 "Call Drop_on_1"
        Drop_on_1()
      else:
        $ 15 "Else" "noBreak"
        $ 16 "Call Drop_on_2"
        Drop_on_2()
      end
      $ 21 "Switch cont_process"
      switch_1 = cont_process
      $ 22 "Case 0"
      if (0 == switch_1):
        $ 23 "Call Save_on_1"
        Save_on_1()
      elif (1 == switch_1):
        $ 24 "Case 1"
        $ 25 "Call Save_on_2"
        Save_on_2()
      elif (2 == switch_1):
        $ 26 "Case 2"
        $ 27 "Call Save_on_3"
        Save_on_3()
      end
      $ 28 "Set cont_process=cont_process+1"
      cont_process = cont_process + 1
    end
  end
end
